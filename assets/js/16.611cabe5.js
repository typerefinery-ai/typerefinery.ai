(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{424:function(e,t,a){"use strict";a.r(t);var n=a(56),r=Object(n.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"introduction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[this._v("#")]),this._v(" Introduction")]),this._v(" "),t("p",[this._v("Knowledge graphs are one of the most important technologies of the 2020s. Gartner predicted that\nthe applications of graph processing and graph databases will grow at 100% annually over the next\nfew years.\nOver the last two decades, this technology was adopted mostly by engineers and ontologists, hence\nthe majority of knowledge graph tools were designed for the users with advanced programming\nskills.\nIn general, Knowledge graphs, need data to be imported and harmonised from multiple sources.\nThen algorithms, rules and reasoning are used to identify patterns of interest. In addition,\nvisualisation tools are required to visually sort through all of the data, and sub-queries may result in\nstandard charts (e.g. time-series, pie chart, bar chart etc.). Finally, various analytical methods are\nrequired to further extract insights.\nAll of this requires the development of considerable custom code, or very powerful no-code user\ninterfaces. TypeDB is considerably differentiated from all other knowledge graphs, and has the\npotential to be a game changer, but it is relatively new and has limited capabilities in its no-code\ninterface (TypeDB WorkBase).\nThe Type Explorer is designed as a superior replacement to the Grakn WorkBase.")])])}),[],!1,null,null,null);t.default=r.exports}}]);