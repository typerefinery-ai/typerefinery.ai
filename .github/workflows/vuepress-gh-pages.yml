# Deploy to GitHub Pages
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env: 
  CONFIG: ""

jobs:  
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    outputs:
      config: ${{ steps.config.outputs.config }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: NPM Install
        run: npm install

      - name: NPM Build
        run: npm run build

      - name: Get config
        id: config
        run: |
          echo "CONFIG=$(cat ./config.json | jq -r tostring)" >> $GITHUB_OUTPUT

      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: src/.vuepress/dist

  # Deployment job
  deploy:
    env:
      CONFIG: ${{ needs.build.outputs.config }}
      NODE_ENV: production 
      APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
      API_KEY: ${{ secrets.API_KEY }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

      - name: Manually index site
        env:
          CONFIG: "${{ env.CONFIG }}"
          APPLICATION_ID: "${{ secrets.APPLICATION_ID }}"
          API_KEY: "${{ secrets.API_KEY }}"
        run: docker run -e CONFIG -e APPLICATION_ID -e API_KEY algolia/docsearch-scraper 
